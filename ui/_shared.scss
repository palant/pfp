/*
 * This Source Code is subject to the terms of the Mozilla Public License
 * version 2.0 (the "License"). You can obtain a copy of the License at
 * http://mozilla.org/MPL/2.0/.
 */

$font-family: "Helvetica Neue", helvetica, arial, sans-serif;

$text-color: #000;
$background-color: #fff;
$warning-background: #faa;
$success-background: #cfc;
$error-text: #f44;
$hover-background: #e2f4ff;
$greyed-color: #ccc;

:root
{
  --font-size: 24px;
  --font-size-small: 16px;
  --block-spacing: calc(var(--font-size) * 0.625);
  --block-padding: calc(var(--block-spacing) / 3);
  --inline-spacing: calc(var(--block-spacing) / 3);
  --border-radius: var(--block-padding);
  --dialog-padding: calc(var(--block-spacing) * 4 / 3);
  --small-icon-size: var(--font-size-small);
  --text-icon-size: var(--font-size);
  --icon-size: calc(var(--font-size) * 4 / 3);
  --large-icon-size: calc(var(--font-size) * 2);
}

:root[data-size="small"]
{
  --font-size: 15px;
  --font-size-small: 10px;
}

:root[data-size="smaller"]
{
  --font-size: 20px;
  --font-size-small: 13.333px;
}

:root[data-size="larger"]
{
  --font-size: 27px;
  --font-size-small: 18px;
}

:root[data-size="large"]
{
  --font-size: 30px;
  --font-size-small: 20px;
}

@mixin float-end
{
  :root:not([dir="rtl"]) &
  {
    float: right;
  }

  :root[dir="rtl"] &
  {
    float: left;
  }
}

body
{
  background-color: $background-color;
  color: $text-color;
}

body,
input,
button,
select
{
  font-family: $font-family;
  font-size: var(--font-size);
}

input:not([type="checkbox"], [type="radio"], [type="range"], [type="submit"], [type="file"], .tag-input),
.tag-editor
{
  appearance: none;
  border: 1px inset ButtonBorder;
  border-radius: 2px;
  outline: none;
  background-color: Field;
  color: FieldText;

  &:focus,
  &.focus
  {
    outline: 1px inset ButtonBorder;
  }
}

a
{
  text-decoration: none;

  &:hover
  {
    text-decoration: underline;
  }
}

a:focus
{
  /* Make sure outline is always visible, browsers normally won’t show it before Tab is pressed */
  outline: 1px dotted;
}

.warning
{
  background-color: $warning-background;
  border-radius: var(--border-radius);
  padding: var(--block-padding);

  padding-inline-start: calc(var(--icon-size) + var(--block-padding) + var(--inline-spacing));
  background-image: url("../images/ionicons/md-warning.svg");
  background-size: var(--icon-size);
  background-position: var(--block-padding) var(--block-padding);
  background-repeat: no-repeat;
}

.success
{
  background-color: $success-background;
  border-radius: var(--border-radius);
  padding: var(--block-padding);
}

.error
{
  font-size: var(--font-size-small);
  color: $error-text;
}

.unknown-error-cancel
{
  @include float-end;
}

.unknown-error-details
{
  font-size: var(--font-size-small);
  white-space: pre-wrap;
}

.help-icon
{
  display: inline-block;
  cursor: help;
  width: var(--text-icon-size);
  height: var(--text-icon-size);
  background-size: var(--text-icon-size);
  background-repeat: no-repeat;
  background-image: url("../images/ionicons/md-help-circle-outline.svg");

  @media print
  {
    display: none;
  }
}

input[type="checkbox"]
{
  appearance: none;
  width: var(--font-size);
  height: var(--font-size);
  border: 1px solid black;
  border-radius: 2px;
  margin: 0;
  margin-inline-end: var(--inline-spacing);
}

input[type="checkbox"]:checked
{
  background-image: url("../images/ionicons/md-checkmark.svg");
  background-size: calc(var(--font-size) - 4px);
  background-repeat: no-repeat;
  background-position: center;
}

.modalOverlay
{
  display: flex;
  position: fixed;
  inset: 0;
  padding: var(--dialog-padding);
  z-index: 10000;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 70%);
}

.modalOverlay-inner
{
  margin: auto;
  background-color: $background-color;
  border: 1px solid black;
  border-radius: var(--border-radius);

  &.stretch
  {
    width: 100%;
  }

  & > :last-child
  {
    display: flex;
    flex-direction: column;
    padding: var(--dialog-padding);
  }

  &.cancelable > :last-child
  {
    padding-top: max(calc(var(--dialog-padding) - var(--small-icon-size) - var(--border-radius)), 0);
  }
}

.modalOverlay-cancel-container
{
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.cancel
{
  display: inline-block;
  min-width: var(--small-icon-size);
  min-height: var(--small-icon-size);
  background-size: var(--small-icon-size);
  background-repeat: no-repeat;
  background-image: url("../images/ionicons/md-close.svg");

  &:hover
  {
    background-color: $hover-background;
  }
}

.modalOverlay-cancel-container > .cancel
{
  margin: var(--border-radius);
}

.modal-form
{
  display: flex;
  flex-direction: column;
  margin: 0;
}

.setting
{
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  padding: var(--block-spacing) 0;
}

.setting:not(:last-child)
{
  border-bottom: 1px solid $greyed-color;
}

.setting-label
{
  display: flex;
  flex-direction: column;
  flex-grow: 0;
  width: 70%;
  margin-right: var(--block-spacing);
}

.description
{
  font-size: 80%;
  opacity: 0.5;
  padding-left: var(--block-spacing);
}

.setting input:not([type="checkbox"])
{
  flex-grow: 1;
  width: var(--font-size);
}

.accessKeyMarker
{
  /* text-decoration isn’t drawn below descenders like g */
  background-size: 1px 1em;
  box-shadow:
    inset 0 -0.125em $background-color,
    inset 0 -0.175em $text-color;
}

.accessKeyHint
{
  --size: calc(var(--icon-size) - 4px);
  --border-radius: 3px;
  --padding: 2px;
  position: absolute;
  display: flex;
  font-size: calc(var(--size) - var(--border-radius) * 2 - var(--padding) * 2);
  border: 1px solid black !important;
  border-radius: var(--border-radius);
  background-color: #ffffe0;
  text-decoration: underline;
  min-width: var(--size);
  min-height: var(--size);
  align-items: center;
  justify-content: center;
  opacity: 0.8;
  z-index: 10001;

  @media print
  {
    display: none;
  }
}

.block-start
{
  margin-top: var(--block-spacing);
}

.iconic-link
{
  min-width: var(--icon-size);
  min-height: var(--icon-size);
  background-size: var(--icon-size);
  background-repeat: no-repeat;
  margin: 1px;
}

a.iconic-link:hover
{
  outline: 1px solid #888;
}

.password-value-container
{
  display: flex;
  flex-direction: row;
}

.password-value
{
  flex-grow: 1;
}

.show-password
{
  background-image: url("../images/ionicons/eye.svg");
}

.show-password.active
{
  background-image: url("../images/ionicons/eye-off.svg");
}

.progress-container
{
  display: flex;
  flex-direction: row;
  align-items: center;
}

.progress-indicator
{
  $image-size: var(--font-size);
  min-width: $image-size;
  min-height: $image-size;
  background-size: $image-size;
  background-repeat: no-repeat;
  opacity: 0.6;
  margin: 0 1em;
  background-image: url("../images/circles.svg");
}

.tag-list
{
  display: inline;
  margin: 0;
  padding: 0;

  li
  {
    display: inline-block;
    margin: 2px;
    padding: 0 2px;
    border: 1px solid $text-color;
    border-radius: 3px;
    background-color: $hover-background;
    white-space: nowrap;
  }

  .tag-remove
  {
    display: inline-block;
    cursor: pointer;
    border-inline-start: 1px solid $text-color;
    margin-inline-start: 2px;
  }
}
